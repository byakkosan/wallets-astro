---
import BaseLayout from '../layouts/BaseLayout.astro';
import WalletList from '../components/WalletList.astro';
import { actions } from 'astro:actions';
import { getSecret } from "astro:env/server";

const secretsConfigured = Boolean( getSecret('API_KEY')) && Boolean(getSecret('ENTITY_SECRET'));
const createWalletResponse = Astro.getActionResult(actions.createWallet);
console.log(secretsConfigured);
if (createWalletResponse && !createWalletResponse.error) {
  return Astro.redirect(`/wallets`);
}
---

<BaseLayout title="Wallets Playground">
	<main>
		<section>
			<h1>Wallets Playground</h1>
			<p>An admin page to quickly create new wallets and grab IDs and addresses. Alternatively, go directly to the <a href="https://console.circle.com/wallets/dev/wallets">Circle developer's console</a> to see a list of all developer-controlled wallets that have been created.</p>
		</section>

		<section>
			<h2>Create new wallet</h2>
			<form action={actions.createWallet} method="POST">
				<div class="select-wrapper">
					<label for="blockChain">Source chain:</label>
					<select name="blockChain" id="blockChain">
						<option value="">-- Select --</option>
						<option value="ARB-SEPOLIA">Arbitrum Sepolia</option>
						<option value="AVAX-FUJI">Avalanche Fuji</option>
						<option value="ETH-SEPOLIA">Ethereum Sepolia</option>
					</select>
				</div>
				{secretsConfigured ? 
					<button >Create wallet</button> :
					<button disabled>Create wallet</button>
				}
			</form>
			{!secretsConfigured && <p>Your secrets have not been configured.</p>}
			{createWalletResponse?.error && <p>Transaction failed. Please check your transaction logs for details.</p>}
	</section>
	<section>
		<h2>Wallets</h2>
		<WalletList />
	</section>
		
	</main>
</BaseLayout>

<style>
	h1,
	h2 {
		margin-block-end: var(--space-xs);
	}

	small {
		font-size: var(--step--1);
	}

	form {
		display: flex;
		gap: var(--space-m);
		margin-block-end: var(--space-xs);
	}

	.select-wrapper {
		display: flex;
		flex-direction: column;
	}

	button {
		align-self: end;
	}

	:global(select) {
		width: 13em;
	}
</style>
