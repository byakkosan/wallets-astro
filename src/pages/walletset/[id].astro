---
import BaseLayout from '../../layouts/BaseLayout.astro';
import WalletList from '../../components/WalletList.astro';
import { actions } from 'astro:actions';
import { getSecret } from "astro:env/server";
import chains from '../../data/chains.json';

const secretsConfigured = Boolean( getSecret('API_KEY')) && Boolean(getSecret('ENTITY_SECRET'));
const walletSetId = Astro.url.pathname.match(/(?<=\/walletset\/)[\da-f-]{36}(?=$|[/?#])/i)?.[0];
const createWalletResponse = Astro.getActionResult(actions.wallet.create);
if (createWalletResponse && !createWalletResponse.error) {
  console.log("Wallet created successfully");
}
---
<BaseLayout title="Wallet Set">
  <section>
    <h2>Wallet Set ID</h2>
    <p>{walletSetId}</p>
  </section>
  <section>
		<h2>Create new wallet</h2>
		<form action={actions.wallet.create} method="POST">
      <fieldset class="radio-wrapper">
        <legend>Account Type</legend>
        <div class="radio-wrapper">
          <input type="radio" name="accountType" id="eoa" value="eoa" checked />
          <label for="eoa">EOA</label>
        </div>
        <div class="radio-wrapper">
          <input type="radio" name="accountType" id="sca" value="sca" />
          <label for="sca">SCA</label>
        </div>
      </fieldset>
			<div class="select-wrapper">
				<label for="blockChain">Source chain:</label>
				<select name="blockChain" id="blockChain">
					<option value="">-- Select --</option>
					{chains.chains.map((chain) => (
						<option value={chain.optionValue} data-eoa={chain.eoa} data-sca={chain.sca}>{chain.name}</option>
					))}
				</select>
			</div>
      <div class="input-wrapper">
        <label for="numberOfWallets">Number of wallets:</label>
        <input type="number" name="numberOfWallets" id="numberOfWallets" value={1} />
      </div>
      <input type="hidden" name="walletSetId" value={walletSetId} />
			{secretsConfigured ? 
				<button >Create wallet</button> :
				<button disabled>Create wallet</button>
			}
		</form>
		{!secretsConfigured && <p>Your secrets have not been configured.</p>}
		{createWalletResponse?.error && <p>Transaction failed. Please check your transaction logs for details.</p>}
	</section>

	<section>
		<h2>Wallets</h2>
    <WalletList walletSetId={walletSetId} />
	</section>
</BaseLayout>

<style>
  h2 {
    margin-block-end: var(--space-s);
  }

  form > * {
    margin-block-end: var(--space-s);
  }

  :not(.radio-wrapper) > label {
    display: block;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const radioButtons = document.querySelectorAll('input[name="accountType"]');
    const select = document.getElementById('blockChain') as HTMLSelectElement;
    const allOptions = Array.from(select.options);
  
    function filterChains() {
      const selectedType = (document.querySelector('input[name="accountType"]:checked') as HTMLInputElement)?.value;
      
      select.innerHTML = '<option value="">-- Select --</option>';

      if (selectedType) {
        allOptions.slice(1).forEach(option => {
          const supportsType = (option as HTMLOptionElement).dataset[selectedType] === 'true';
          if (supportsType) {
            select.appendChild((option as HTMLOptionElement).cloneNode(true));
          }
        });
      }
    }
    radioButtons.forEach(radio => {
      radio.addEventListener('change', filterChains);
    });
  });
</script>