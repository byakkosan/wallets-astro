---
import { Code } from 'astro:components';
const {source} = Astro.props;
---
<div>
  <Code code={source} theme="css-variables" />
  <span>Copied!</span>
  <button data-copy-button type="button">
    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke-width='1.75'>
      <path d='M3 19a2 2 0 0 1-1-2V2a2 2 0 0 1 1-1h13a2 2 0 0 1 2 1'/>
      <rect x='6' y='5' width='16' height='18' rx='1.5' ry='1.5'/>
    </svg>
    <span class="visually-hidden">Copy</span>
  </button>
  <textarea>{source}</textarea>
</div>


<style>
  div {
    position: relative;
    display: flex;
    gap: var(--space-3xs);
    align-items: center;
  }

  button {
    background-color: transparent;
    border-radius: var(--border-radius);
    border: 1px solid white;
    cursor: pointer;
    padding: var(--space-3xs) var(--space-3xs) 0;
    opacity: 0.7;
    transition: opacity ease-in-out 150ms;
  }

  button:hover,
  button.active {
    opacity: 1;
  }

  button svg {
    height: 1em;
    width: 1em;
    stroke: white;
  }

  span {
    position: absolute;
    top: -1.5em;
    right: -0.8em;
    font-size: smaller;
    display: none;
  }

  textarea {
    display: none;
  }

  :global(span.line span) {
    display: block;
    width: 12em;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
</style>

<script>
  const buttons = document.querySelectorAll('[data-copy-button]');
  buttons.forEach((button) => {
    const codeToCopy = (button.nextElementSibling as HTMLTextAreaElement).value
    const copyMsg = button.previousElementSibling as HTMLSpanElement

    button.addEventListener('click', () => {
      navigator.clipboard
        .writeText(codeToCopy)
        .then(() => {
          copyMsg.style.display = "block";
          (button as HTMLButtonElement).classList.add('active');

          setTimeout(() => {
            copyMsg.style.display = "none";
            (button as HTMLButtonElement).classList.remove('active');
          }, 2000);
        })
        .catch((error) => {
          const err = error as Error;
          console.error(err.name, err.message);
        })
    });
  });
</script>
